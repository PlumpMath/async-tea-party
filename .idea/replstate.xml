<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1464807557434">{:repl-history {:ide [], :local [&quot;(def value \&quot;hello\&quot;)&quot; &quot;(ns async-tea-party.core)&quot; &quot;(ns)&quot; &quot;(def tea-channel (async/chan))&quot; &quot;(async/&gt;!! tea-channel :cup-of-tea)&quot; &quot;(async/&gt;!! tea-channel :cup-of-tea-2)&quot; &quot;()&quot; &quot;(async/&gt;!! tea-channel :cup-of-tea-3)&quot; &quot;(async/&gt;!! tea-channel :cup-of-tea-4)&quot; &quot;(async/close! tea-channel)&quot; &quot;(async/&gt;!! tea-channel :cup-of-tea-5)&quot; &quot;(async/&lt;!! tea-channel)&quot; &quot;(async/&gt;!! tea-channel nil)&quot; &quot;(let [tea-channel (async/chan)]\n  (async/go (async/&gt;! tea-channel :cup-of-tea))\n  (async/go (println \&quot;Thanks for the \&quot; (async/&lt;! tea-channel))))&quot; &quot;(let [tea-channel (async/chan)]\n  (async/go (async/&gt;! tea-channel :cup-of-tea-1))\n  (async/go (println \&quot;Thanks for the \&quot; (async/&lt;! tea-channel))))&quot; &quot;(async/go-loop []\n  (println \&quot;Thanks for the \&quot; (async/&lt;! tea-channel))\n  (recur))&quot; &quot;(async/&gt;!! tea-channel :hot-cup-of-tea)&quot; &quot;(async/&gt;!! tea-channel :tea-with-sugar)&quot; &quot;(async/&gt;!! tea-channel :tea-with-milk)&quot; &quot;(def tea-channel (async/chan 10))&quot; &quot;(def milk-channel (async/chan 10))&quot; &quot;(def sugar-channel (async/chan 10))&quot; &quot;(async/go-loop []\n  (let [[v ch] (async/alts! [tea-channel\n                             milk-channel\n                             sugar-channel])]\n    (println \&quot;Got \&quot; v \&quot; from \&quot; ch)\n    (recur)))&quot; &quot;(async/&gt;!! sugar-channel :sugar)&quot; &quot;(async/&gt;!! milk-channel :milk)&quot; &quot;(async/&gt;!! tea-channel :tea)&quot;], :remote []}}</component>
</project>